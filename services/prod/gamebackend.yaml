apiVersion: apps/v1
kind: Deployment
metadata:
  name: gamebackend
  namespace: sro
  labels:
    app: gamebackend
    version: v1
    sro: microservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gamebackend
      version: v1
  template:
    metadata:
      labels:
        app: gamebackend
        version: v1
        sro: microservice
    spec:
      containers:
        - name: gamebackend
          image: 779965382548.dkr.ecr.us-east-1.amazonaws.com/sro/gamebackend:latest
          ports:
          - containerPort: 8082
          imagePullPolicy: Always
          volumeMounts:
            - name: jwt-certs
              mountPath: "/etc/sro/auth/"
              readOnly: true
            - name: agones-client-certs
              mountPath: "/etc/sro/auth/agones/client"
              readOnly: true
            - name: agones-ca
              mountPath: "/etc/sro/auth/agones/ca"
              readOnly: true
            - name: sro-config
              mountPath: "/etc/sro/"
              readOnly: true
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: jwt-certs
          secret:
            secretName: jwt-certs
            items:
              - key: jwt.key
                path: key
              - key: jwt.key.pub
                path: key.pub
        - name: agones-client-certs
          secret:
            secretName: allocator-client.default
            items:
              - key: tls.crt
                path: cert
              - key: tls.key
                path: key
        - name: agones-ca
          secret:
            secretName: allocator-tls-ca
            items:
              - key: tls-ca.crt
                path: ca
        - name: sro-config
          secret:
            secretName: sro-config 
            items:
              - key: config.yaml
                path: config.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: gamebackend
  namespace: sro
  labels:
    app: gamebackend
    service: gamebackend
spec:
  type: ClusterIP
  selector:
    app: gamebackend
    version: v1
  ports:
    - port: 80
      targetPort: 8082
      protocol: TCP
      appProtocol: grpc
---
apiVersion: v1
kind: Service
metadata:
  name: gamebackend-headless
  namespace: sro
  labels:
    app: gamebackend
    headless: gamebackend
spec:
  clusterIP: None
  selector:
    app: gamebackend
    version: v1
  ports:
    - port: 80
      targetPort: 8082
      protocol: TCP
      appProtocol: grpc