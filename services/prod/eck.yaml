apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: production
  namespace: logging
spec:
  version: 8.7.0
  # secureSettings:
  #   - secretName: es-oidc-secret
  nodeSets:
  - name: default
    count: 1
    config:
      node.store.allow_mmap: false
      # xpack.security.authc.realms.oidc.sro:
      #   order: 0
      #   rp.client_id: "eck"
      #   rp.response_type: code
      #   rp.redirect_uri: "https://kibana.shatteredrealmsonline.com/api/security/oidc/callback"
      #   op.issuer: "https://sso.shatteredrealmsonline.com/realms/default"
      #   op.authorization_endpoint: "https://sso.shatteredrealmsonline.com/realms/default/protocol/openid-connect/auth"
      #   op.token_endpoint: "https://sso.shatteredrealmsonline.com/realms/default/protocol/openid-connect/token"
      #   op.jwkset_path: "https://sso.shatteredrealmsonline.com/realms/default/protocol/openid-connect/certs"
      #   op.userinfo_endpoint: "https://sso.shatteredrealmsonline.com/realms/default/protocol/openid-connect/userinfo"
      #   op.endsession_endpoint: "https://sso.shatteredrealmsonline.com/realms/default/protocol/openid-connect/logout"
      #   rp.post_logout_redirect_uri: "https://kibana.shatteredrealmsonline.com/security/logged_out"
      #   claims.principal: sub
      #   claims.groups: realm.roles 
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: production
  namespace: logging
spec:
  version: 8.7.0
  count: 1
  elasticsearchRef:
    name: production
  config:
    server:
      publicBaseUrl: https://kibana.shatteredrealmsonline.com
    # xpack.security.authc.providers:
    #   oidc.oidc1:
    #     order: 0
    #     realm: sro
  http:
    tls:
      selfSignedCertificate:
        disabled: true
---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: fluent-bit
#   namespace: logging
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: fluent-bit-read
# rules:
# - apiGroups: [""]
#   resources:
#   - namespaces
#   - pods
#   verbs: ["get", "list", "watch"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: fluent-bit-read
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: fluent-bit-read
# subjects:
# - kind: ServiceAccount
#   name: fluent-bit
#   namespace: logging
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: fluent-bit-config
#   namespace: logging
#   labels:
#     app: fluent-bit
# data:
#   # Configuration files: server, input, filters and output
#   # ======================================================
#   fluent-bit.conf: |
#     [SERVICE]
#         Flush         1
#         Log_Level     info
#         Daemon        off
#         Parsers_File  parsers.conf
#         HTTP_Server   On
#         HTTP_Listen   0.0.0.0
#         HTTP_Port     2020
#     @INCLUDE input-kubernetes.conf
#     @INCLUDE filter-kubernetes.conf
#     @INCLUDE output-elasticsearch.conf
#   input-kubernetes.conf: |
#     [INPUT]
#         Name              tail
#         Tag               kube.*
#         Path              /var/log/containers/*.log
#         Parser            cri
#         DB                /var/log/flb_kube.db
#         Mem_Buf_Limit     5MB
#         Skip_Long_Lines   On
#         Refresh_Interval  10
#   filter-kubernetes.conf: |
#     [FILTER]
#         Name                kubernetes
#         Match               kube.*
#         Kube_URL            https://kubernetes.default.svc:443
#         Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
#         Kube_Tag_Prefix     kube.var.log.containers.
#         Merge_Log           On
#         Merge_Log_Key       log_processed
#         K8S-Logging.Parser  On
#         K8S-Logging.Exclude Off
#   output-elasticsearch.conf: |
#     [OUTPUT]
#         Name            es
#         Match           *
#         Host            ${FLUENT_ELASTICSEARCH_HOST}
#         Port            ${FLUENT_ELASTICSEARCH_PORT}
#         HTTP_User       ${FLUENT_ELASTICSEARCH_USER}
#         HTTP_Passwd     ${FLUENT_ELASTICSEARCH_PASSWORD}
#         Logstash_Format On
#         Type  _doc
#         Replace_Dots    On
#         Retry_Limit     False
#         tls             On
#         tls.verify      Off
#         Index           my_index
#   parsers.conf: |
#     [PARSER]
#         Name   apache
#         Format regex
#         Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
#         Time_Key time
#         Time_Format %d/%b/%Y:%H:%M:%S %z
#     [PARSER]
#         Name   apache2
#         Format regex
#         Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
#         Time_Key time
#         Time_Format %d/%b/%Y:%H:%M:%S %z
#     [PARSER]
#         Name   apache_error
#         Format regex
#         Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$
#     [PARSER]
#         Name   nginx
#         Format regex
#         Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
#         Time_Key time
#         Time_Format %d/%b/%Y:%H:%M:%S %z
#     [PARSER]
#         Name   json
#         Format json
#         Time_Key time
#         Time_Format %d/%b/%Y:%H:%M:%S %z
#     [PARSER]
#         Name docker
#         Format json
#         Time_Key time
#         Time_Format %Y-%m-%dT%H:%M:%S.%L
#         Time_Keep Off
#     [PARSER]
#         Name cri
#         Format regex
#         Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
#         Time_Key    time
#         Time_Format %Y-%m-%dT%H:%M:%S.%L%z
#     [PARSER]
#         Name        syslog
#         Format      regex
#         Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
#         Time_Key    time
#         Time_Format %b %d %H:%M:%S
#     [PARSER]
#         Name    envoy
#         Format  regex
#         Regex ^\[(?<start_time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)? (?<protocol>\S+)" (?<code>[^ ]*) (?<response_flags>[^ ]*) (?<bytes_received>[^ ]*) (?<bytes_sent>[^ ]*) (?<duration>[^ ]*) (?<x_envoy_upstream_service_time>[^ ]*) "(?<x_forwarded_for>[^ ]*)" "(?<user_agent>[^\"]*)" "(?<request_id>[^\"]*)" "(?<authority>[^ ]*)" "(?<upstream_host>[^ ]*)"
#         Time_Format %Y-%m-%dT%H:%M:%S.%L%z
#         Time_Keep   On
#         Time_Key start_time
#     [PARSER]
#         Name    istio-envoy-proxy
#         Format  regex
#         Regex ^\[(?<start_time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)? (?<protocol>\S+)" (?<response_code>[^ ]*) (?<response_flags>[^ ]*) (?<response_code_details>[^ ]*) (?<connection_termination_details>[^ ]*) (?<upstream_transport_failure_reason>[^ ]*) (?<bytes_received>[^ ]*) (?<bytes_sent>[^ ]*) (?<duration>[^ ]*) (?<x_envoy_upstream_service_time>[^ ]*) "(?<x_forwarded_for>[^ ]*)" "(?<user_agent>[^\"]*)" "(?<x_request_id>[^\"]*)" (?<authority>[^ ]*)" "(?<upstream_host>[^ ]*)" (?<upstream_cluster>[^ ]*) (?<upstream_local_address>[^ ]*) (?<downstream_local_address>[^ ]*) (?<downstream_remote_address>[^ ]*) (?<requested_server_name>[^ ]*) (?<route_name>[^  ]*)
#         Time_Format %Y-%m-%dT%H:%M:%S.%L%z
#         Time_Keep   On
#         Time_Key start_time
# ---
# apiVersion: apps/v1
# kind: DaemonSet
# metadata:
#   name: fluent-bit
#   namespace: logging
#   labels:
#     app: fluent-bit-logging
#     version: v1
#     kubernetes.io/cluster-service: "true"
# spec:
#   selector:
#     matchLabels:
#       app: fluent-bit-logging
#   template:
#     metadata:
#       labels:
#         app: fluent-bit-logging
#         version: v1
#         kubernetes.io/cluster-service: "true"
#       annotations:
#         prometheus.io/scrape: "true"
#         prometheus.io/port: "2020"
#         prometheus.io/path: /api/v1/metrics/prometheus
#     spec:
#       containers:
#       - name: fluent-bit
#         image: fluent/fluent-bit:1.2.1
#         imagePullPolicy: Always
#         ports:
#           - containerPort: 2020
#         env:
#         - name: FLUENT_ELASTICSEARCH_HOST
#           value: "production-es-http"
#         - name: FLUENT_ELASTICSEARCH_PORT
#           value: "9200"
#         - name: FLUENT_ELASTICSEARCH_USER
#           value: "elastic"
#         - name: FLUENT_ELASTICSEARCH_PASSWORD
#           valueFrom:
#             secretKeyRef:
#               name: production-es-elastic-user
#               key: elastic
#         volumeMounts:
#         - name: varlog
#           mountPath: /var/log
#         - name: varlibdockercontainers
#           mountPath: /var/lib/docker/containers
#           readOnly: true
#         - name: fluent-bit-config
#           mountPath: /fluent-bit/etc/
#       terminationGracePeriodSeconds: 10
#       volumes:
#       - name: varlog
#         hostPath:
#           path: /var/log
#       - name: varlibdockercontainers
#         hostPath:
#           path: /var/lib/docker/containers
#       - name: fluent-bit-config
#         configMap:
#           name: fluent-bit-config
#       serviceAccount: fluent-bit
#       serviceAccountName: fluent-bit
#       tolerations:
#       - key: node-role.kubernetes.io/master
#         operator: Exists
#         effect: NoSchedule
#       - operator: "Exists"
#         effect: "NoExecute"
#       - operator: "Exists"
#         effect: "NoSchedule"
