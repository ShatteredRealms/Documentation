apiVersion: apps/v1
kind: Deployment
metadata:
  name: character
  namespace: sro
  labels:
    app: character
    version: v1
    sro: microservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: character
      version: v1
  template:
    metadata:
      labels:
        app: character
        version: v1
        sro: microservice
    spec:
      containers:
        - name: character
          image: 779965382548.dkr.ecr.us-east-1.amazonaws.com/sro/character:0.1.0
          ports:
          - containerPort: 8081
          imagePullPolicy: Always
          volumeMounts:
            - name: sro-config
              mountPath: "/etc/sro/"
              readOnly: true
          env:
            - name: SRO_CHARACTER_POSTGRES_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-postgresql-ha-postgresql
                  key: password
            - name: SRO_CHARACTER_MONGO_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: mongodb-root-password
            - name: SRO_CHARACTER_KEYCLOAK_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-character
                  key: id
            - name: SRO_CHARACTER_KEYCLOAK_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-character
                  key: secret
            - name: SRO_REDIS_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-redis-cluster
                  key: redis-password
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: sro-config
          configMap:
            name: sro-config 
            items:
              - key: config.yaml
                path: config.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: character
  namespace: sro
  labels:
    app: character
    service: character
spec:
  type: ClusterIP
  selector:
    app: character
    version: v1
  ports:
    - port: 80
      targetPort: 8081
      appProtocol: grpc
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: character-headless
  namespace: sro
  labels:
    app: character
    headless: character
spec:
  clusterIP: None
  selector:
    app: character
    version: v1
  ports:
    - port: 80
      targetPort: 8081
      appProtocol: grpc
      protocol: TCP
